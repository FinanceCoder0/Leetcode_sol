# https://leetcode.com/problems/count-number-of-nice-subarrays/submissions/1296928502?envType=daily-question&envId=2024-06-22

class Solution(object):
    def numberOfSubarrays(self, nums, k):
            from collections import defaultdict

            odd_count = 0
            count_map = defaultdict(int)
            count_map[0] = 1
            nice_subarrays = 0
            
            for num in nums:
                if num % 2 != 0:
                    odd_count += 1
                if odd_count - k in count_map:
                    nice_subarrays += count_map[odd_count - k]
                count_map[odd_count] += 1

            return nice_subarrays



        
