# https://leetcode.com/problems/balance-a-binary-search-tree/submissions/1300870251?envType=daily-question&envId=2024-06-26

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def balanceBST(self, root):
        
        def inorder(root):
            if root is None: return []
            return inorder(root.left) + [root.val] + inorder(root.right)
        
        nums = inorder(root)
        
        def bst(l,r):
            if l>r: return None
            mid = (l+r)//2
            return TreeNode(nums[mid], bst(l,mid-1), bst(mid+1,r))
            
        return bst(0, len(nums)-1)

        
